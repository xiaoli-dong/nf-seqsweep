/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]

    withName: fastqc_input {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/input/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: fastqc_trimmed_with_bbduk {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/qc/bbduk/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: fastqc_trimmed_with_fastp {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/qc/fastp/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: fastqc_dehost {
        ext.args = '--quiet'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/dehost/hostile/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: stats_input {
        ext.prefix = { "${meta.id}.input_seqstats" }
        ext.args = '--quiet -T'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/input" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: stats_trimmed_with_bbduk {
        ext.prefix = { "${meta.id}.${params.illumina_reads_qc_tool}_seqstats" }
        ext.args = '--quiet -T'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/qc/bbduk" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: stats_trimmed_with_fastp {
        ext.prefix = { "${meta.id}.${params.illumina_reads_qc_tool}_seqstats" }
        ext.args = '--quiet -T'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/qc/fastp" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: stats_dehost {
        ext.prefix = { "${meta.id}.dehost_seqstats" }
        ext.args = '--quiet -T'
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/dehost/hostile" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: HOSTILE_CLEAN {
        ext.args = '--force '
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/dehost/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'MULTIQC' {
        ext.args   = { params.multiqc_title ? "--title \"$params.multiqc_title\"" : '' }
        publishDir = [
            path: { "${params.outdir}/multiqc" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    withName: BBMAP_BBDUK {
        ext.args = [
            "ref=adapters,artifacts,phix",
            "ktrim=r",
            "k=23",
            "mink=11",
            "hdist=1",
            "tpe",
            "tbo",
            "maq=15",
            "trimq=10",
            "qtrim=r",
            "minlength=31"
        ].join(' ').trim()


        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/qc/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}"},
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]

    }
    withName: FASTP {
        ext.args = [
            "--cut_front",
            "--cut_front_window_size=1",
            "--cut_front_mean_quality=10",
            "--cut_tail",
            "--cut_tail_window_size=1",
            "--cut_tail_mean_quality=10",
            "--n_base_limit 0",
            "--qualified_quality_phred 20",
            "--average_qual 20",
            "--length_required 50",
            "--detect_adapter_for_pe"
        ].join(' ').trim()

        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/qc/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
    //withName: 'concat_stats_input|concat_stats_trimmed|concat_stats_dehost' {
    withName: 'concat_.*' {
        publishDir = [
            path: { "${params.outdir}/report" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
    withName: REPORT_STATS {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }

    withName: 'HTML_COPYDIR' {
        publishDir = [
            path: { "${params.outdir}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
    withName: 'qcreport_to_json_for_datatable' {
        ext.args = "--sep ,"
        publishDir = [
            path: { "${params.outdir}/html_report/data" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
    withName: 'topmatches_to_json_for_datatable' {
        ext.args = "--sep , --name topmatch_data --colname topmatch_tablecol"
        //ext.prefix = { "${meta.id}.topmatches" }
        publishDir = [
            path: { "${params.outdir}/html_report/data" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
    withName: ' kraken2mpa_to_json_for_jstree' {
        publishDir = [
            path: { "${params.outdir}/html_report/data" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
    withName: 'KRAKEN2_KRAKEN2' {
        //ext.args = "--display-header  --intermediate-ranks"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/classify/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
    withName: 'KRAKENTOOLS_KREPORT2MPA' {
        ext.args = "--display-header  --intermediate-ranks"
        //ext.args = "--display-header"
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/classify/kraken2" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
    withName: 'CSVTK_JOIN_MPA_COUNT_PERC' {
        ext.args = "-t -O -C '\$'"
        ext.prefix = { "${meta.id}.kraken2_mpareport_count_perc" }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/classify/kraken2" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
     withName: 'KRAKENTOOLS_GETTOPMATCHES' {
        publishDir = [
            path: { "${params.outdir}/${meta.id}/${params.platform}/classify/kraken2" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }

    withName: 'KRAKENTOOLS_COMBINEMPA_*' {

        publishDir = [
            path: { "${params.outdir}/report" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
    withName: 'KRAKENTOOLS_COMBINEKREPORTS' {
        ext.args = "--display-header"
        publishDir = [
            path: { "${params.outdir}/report" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }
    withName: 'CSVTK_JOIN_SUMMARY_REPORT' {
        ext.args = "-t -O -C '\$'"

        publishDir = [
            path: { "${params.outdir}/report" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename },
        ]
    }



}
